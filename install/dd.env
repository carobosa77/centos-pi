#!/bin/bash

set -e

################################################################################
# Umounts every mounted filesystem in the device
#   ${1}: name of the device
do_umount() {
  local mnt
  mount | grep "^${1}" | tr -s ' ' | sort -r -k2,3 | cut -d' ' -f1 | while read mnt; do
    echo -n "umount ${mnt} ..."
    umount ${mnt}
    echo " Done."
  done
}

################################################################################
# Performs 'dd' of the file indicated to the target. If the file is compressed,
# uncommpress it
#   ${1}: name of the file to 'dd'
#   ${2}: target of the 'dd'
do_dd() {
  if [ -b ${2} ]; then
    case ${1##*.} in
      xz)
        xzcat ${1} | dd of=${2} bs=16M status=progress ;;
      gz)
        zcat ${1} | dd of=${2} bs=16M status=progress ;;
      zip)
        unzip -p ${1} | dd of=${2} bs=16M status=progress ;;
      *)
        dd if=${1} of=${2} bs=16M status=progress ;;
    esac
  else
    case ${1##*.} in
      xz)
        xzcat ${1} > ${2} ;;
      gz)
        zcat ${1} > ${2} ;;
      zip)
        unzip -p ${1} > ${2} ;;
      *)
        cp ${1} ${2} ;;
    esac
  fi
}

################################################################################
# Builds filesystems based on the 'fstab' file information
#   ${1}: directory where the source filesystem is mounted
#   STDIN: fstab information
do_mkfs() {
  while read FS_SPEC FS_FILE FS_VFSTYPE LINE; do
    LABEL=$( echo "${FS_FILE}" | sed 's!/!_!g' )
    UUID=random

    if [ -n "${1}" ]; then
      SOURCE_DEVICE=$( mount | grep " ${1}${FS_FILE%/} " | cut -f1 -d' ' )
      if [ -n "${SOURCE_DEVICE}" ]; then
        LABEL=$( blkid -s LABEL -o value ${SOURCE_DEVICE} )
        UUID=$( blkid -s UUID -o value ${SOURCE_DEVICE} )
      fi
    fi

    [ -n "${FS_VFSTYPE}" ] && echo -n "mkfs.${FS_VFSTYPE} ${FS_SPEC} ..."
    case "${FS_VFSTYPE}" in
      vfat) mkfs.vfat -i ${UUID//-} ${FS_SPEC} ;;
      swap) mkswap -f ${FS_SPEC} ;;
      ext3) mkfs.ext3 -q -F -L ${LABEL} -U ${UUID} ${FS_SPEC} ;;
      ext4) mkfs.ext4 -q -F -L ${LABEL} -U ${UUID} ${FS_SPEC} ;;
      # xfs) mkfs.xfs -f ${FS_SPEC} ;;
    esac > /dev/null
    [ -n "${FS_VFSTYPE}" ] && echo " Done."
  done
}

################################################################################
# Changes in fstab, devices for uuids 
#   STDIN: fstab info
do_fstab_dev2uuid() {
  while read FS_SPEC FS_FILE FS_VFSTYPE FS_MNTOPS FS_FREQ FS_PASSNO LINE; do
    FS_SPEC="UUID=$( blkid -s UUID -o value ${FS_SPEC} )"
    #FS_VFSTYPE=$( blkid -s TYPE -o value ${FS_SPEC} )

    [ -n "${FS_FILE}" ] && \
      echo "${FS_SPEC} ${FS_FILE} ${FS_VFSTYPE} ${FS_MNTOPS} ${FS_FREQ} ${FS_PASSNO}"
  done
}

################################################################################
# Moves files from image to TARGET device
#   ${1}: directory where the source filesystem is mounted
#   ${2}: mount point for the target filesystem
#   STDIN: fstab information
do_mv2target() {
  shopt -s dotglob

  sort -r -k 2,2 | while read FS_SPEC FS_FILE LINE; do
    if [ -n "${FS_FILE}" -a "${FS_FILE}" != "swap" -a "${FS_FILE}" != "none" ]; then
      echo -n "${FS_FILE} -> ${FS_SPEC} ..."
      mount ${FS_SPEC} ${2}
      [ "$( ls -A ${1}${FS_FILE} 2> /dev/null )" ] && \
        mv ${1}${FS_FILE}/* ${2}
      umount ${FS_SPEC}
      echo " Done."

      if mount | grep -q " ${1}${FS_FILE%/} "; then
        echo -n "umount ${FS_FILE} ..."
        umount ${1}${FS_FILE}
        echo " Done"
      fi
    fi
  done
}

################################################################################
# Execute argments action
#   ${*}: action and arguments to execute
if [ -n "${*}" ]; then
  ${*}
fi

